{"version":3,"sources":["context/GlobalReducer.js","context/GlobalContext.js","component/Material.js","pages/Main.js","pages/AddMaterials.js","component/pridejSurovinu.js","component/vyberSuroviny.js","pages/addRecipe.js","component/Menu.js","App.js","index.js"],"names":["reducer","state","action","type","surovina","payload","hlavniState","GlobalContext","createContext","GlobalProvider","children","useReducer","GlobalReducer","dispatch","Provider","value","zmenSurovinu","Material","cislovporadi","name","eventklik","useContext","className","onClick","Main","useState","materialy","setMaterialy","serverMessage","setServerMessage","kliknutoUzivatelem","setkliknutoUzivatelem","useEffect","pridaniMaterialu","a","fetch","data","json","finalData","msg","documents","kliknuto","material","map","index","AddMaterials","vstupOdUzivatele","setvstupOdUzivatele","onInput","e","target","method","headers","body","JSON","stringify","then","console","log","PridejSurovinu","zavri","setSurovina","msgZeServeru","setMsgZeServeru","showButton","setShowButton","zapnutiVypnutiPaneluSVyberemSuroviny","vyberSurovinu","placeholder","toLowerCase","response","mnozstvi","catch","err","VyberSuroviny","suroviny","vybranesuroviny","otevritPridaniSuroviny","setOtevritPridaniSuroviny","seznamSurovin","setSeznamSurovin","inputState","setInputState","filtered","filter","el","indexOf","materialName","regExp","RegExp","search","item","match","length","object","cistaData","polozka","vymazZvoleneSurovinyZNabidky","AddRecipe","zapniPanelSVyberemSurovin","vybraneSuroviny","setVybraneSuroviny","nazevReceptu","setNazevReceptu","editorState","seteditorState","dobaPripravy","setDobaPripravy","nahledovyObrazek","setNahledovyObrazek","setSuroviny","soucetGramaze","setSoucetGramaze","getVsechnySuroviny","prepocitejGramaz","array","sum","forEach","menicMnozstvi","getAttribute","parseInt","smazZvolenouSurovinu","ocisteneVybraneSuroviny","pridejTridu","parentElement","setAttribute","odstranTridu","style","height","overflow","htmlFor","menubar","width","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","onMouseOver","onMouseOut","schemaObjektu","popis","fullText","finalstring","window","location","reload","Menu","to","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.242ba9a7.chunk.js","sourcesContent":["const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      /**\r\n       * 4 - zde se  zpracuje finální operace\r\n       */\r\n      case \"ZMENA_SUROVINY\":\r\n        return{\r\n          ...state,\r\n          surovina:action.payload\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default reducer;","import React, { createContext, useReducer } from \"react\";\r\nimport GlobalReducer from \"./GlobalReducer\";\r\n\r\n/**\r\n * 1. Vyplnit defaultní state\r\n */\r\nconst hlavniState = {\r\n  surovina:\"kacer\"\r\n};\r\n\r\nexport const GlobalContext = createContext(hlavniState);\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(GlobalReducer, hlavniState);\r\n  /**\r\n   * \r\n   * 3. Funkce která manipuluje s příslušným statem z bodu 1 \r\n   */\r\n const zmenSurovinu = (surovina) => {\r\n   dispatch({\r\n     type:\"ZMENA_SUROVINY\",\r\n     payload:surovina\r\n   })\r\n }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n    /**\r\n     * 2. Propíšete tu hodnotu z toho statu\r\n     */\r\n      value={{\r\n        surovina:state.surovina,\r\n        zmenSurovinu\r\n      //Seznam vybraných surovin do receptu\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};","import React, {useContext} from 'react'\r\nimport {GlobalContext} from \"../context/GlobalContext\"\r\nconst Material = ({cislovporadi,name,eventklik}) => {\r\n    const {zmenSurovinu} = useContext(GlobalContext);\r\n    return (\r\n        <div>\r\n           {cislovporadi} - {name}\r\n           <div className=\"btn\" onClick={() => {\r\n               zmenSurovinu(name);\r\n               eventklik(name);\r\n           }}>Zobraz detail</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Material\r\n","import React,{useState, useEffect} from 'react';\r\nimport Material from '../component/Material';\r\n\r\nconst Main = () => {\r\n    const [materialy, setMaterialy] = useState([]);\r\n    const [serverMessage, setServerMessage] = useState(\"\");\r\n    const [kliknutoUzivatelem, setkliknutoUzivatelem] = useState(\"\");\r\n    //Vola nam data z databaze automaticky\r\n    useEffect(() => { \r\n       pridaniMaterialu();\r\n        \r\n    }, [])\r\n\r\n    const pridaniMaterialu = async () => {\r\n        setServerMessage('nacitam data');\r\n        const data = await fetch(\"http://localhost:7000/get-materials\");\r\n        const finalData = await data.json();\r\n        const {msg, documents} = finalData;\r\n        setMaterialy(documents);\r\n        setServerMessage(msg);\r\n    }\r\n    const kliknuto = (material) => {\r\n        setkliknutoUzivatelem(material);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                materialy.map((material,index) => {\r\n                    return(\r\n                        <Material eventklik={kliknuto} key={index} name={material.name} cislovporadi={index} />\r\n                      \r\n                    )\r\n                })\r\n\r\n            }\r\n            \r\n            <div className=\"msg\">{serverMessage}</div>\r\n            {kliknutoUzivatelem}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React, {useState} from 'react'\r\n\r\n\r\nconst AddMaterials = () => {\r\n    const [vstupOdUzivatele, setvstupOdUzivatele] = useState(\"\");\r\nconst vlozeniDoDb = () => {\r\n    fetch(\"http://localhost:7000/save-material\", {\r\n        method:\"post\",\r\n        headers:{\r\n            \"accept\":\"application/json\",\r\n            \"content-type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({name:vstupOdUzivatele})\r\n    }).then((data) => {\r\n        return data.json();\r\n    }).then((finalData) => {\r\n        console.log(finalData.msg)\r\n        setvstupOdUzivatele(\"\");\r\n    })\r\n    \r\n}\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={vstupOdUzivatele} onInput={(e) => {\r\n                setvstupOdUzivatele(e.target.value);\r\n            }} />\r\n            <div className='btn'onClick={vlozeniDoDb}>Vlozit material</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMaterials\r\n","import React,{useState, useContext} from 'react'\n//import { BsFillXCircleFill,BsFileEarmarkArrowUp } from \"react-icons/bs\";\nimport { GlobalContext } from '../context/GlobalContext';\n\nconst PridejSurovinu = ({zavri}) => {\n    const [surovina, setSurovina] = useState(\"\");\n    const [msgZeServeru, setMsgZeServeru] = useState(\"\");\n    const [showButton, setShowButton] = useState(true);\n    const {zapnutiVypnutiPaneluSVyberemSuroviny,vyberSurovinu} = useContext(GlobalContext);\n    const ulozSurovinuNaServerADoAppky = () => {\n        setShowButton(false);\n        setMsgZeServeru(\"Ukládám... chvilku strpení\");\n        fetch(\"http://localhost:5000/save-material\",{\n            method: 'post',\n            headers: {\n              'Accept': 'application/json, text/plain, */*',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({name:surovina.toLowerCase()})\n        }).then((response) => {\n            return response.json();\n        }).then(({msg}) => {\n            setMsgZeServeru(msg);\n            setShowButton(true);\n          if(msg === \"Surovina byla úspěšně uložena v našem seznamu!\"){\n              //Zde dojde k uložení a celkovému propsání do seznamu všech surovin\n             vyberSurovinu({\n                name:surovina,\n                mnozstvi:0\n             })\n             zapnutiVypnutiPaneluSVyberemSuroviny(false);\n          }\n        }).catch((err) => {\n            if(err){\n                setMsgZeServeru(\"Nedošlo k uložení!\")\n                setShowButton(true)\n            }\n        })\n    }\n    return (\n        <div className=\"pridaniSuroviny\">\n             <div className=\"zavrit\" onClick={zavri}></div>\n            <h3>Přidání suroviny</h3>\n            <input type=\"text\" onInput={(e)=>setSurovina(e.target.value)} value={surovina} placeholder=\"Zadejte surovinu\"/>\n           {showButton?<div onClick={ulozSurovinuNaServerADoAppky} className=\"btn btn-pridej-surovinu\">Ulož novou surovinu</div>:<></>} \n            <p>{msgZeServeru}</p>\n        </div>\n    )\n}\n\nexport default PridejSurovinu\n","import React, {useState, useContext, useEffect} from 'react'\r\n//import { BsFillXCircleFill,BsSearch } from \"react-icons/bs\";\r\nimport { GlobalContext } from '../context/GlobalContext';\r\nimport PridejSurovinu from \"./pridejSurovinu\";\r\nconst VyberSuroviny = ({suroviny,vybranesuroviny}) => {\r\nconst [otevritPridaniSuroviny, setOtevritPridaniSuroviny] = useState(false);    \r\nconst [seznamSurovin, setSeznamSurovin] = useState([])\r\nconst {zapnutiVypnutiPaneluSVyberemSuroviny,vyberSurovinu} = useContext(GlobalContext);\r\nconst [inputState, setInputState] = useState(\"\");\r\nuseEffect(() => {\r\n    const filtered = suroviny.filter( function( el ) {\r\n\r\n        const vybraneSuroviny = vybranesuroviny.map((surovina) => {\r\n            return surovina.name;\r\n        })\r\n        return vybraneSuroviny.indexOf( el.materialName ) < 0;\r\n      } );\r\n    setSeznamSurovin(filtered);\r\n    return () => {\r\n        return false;\r\n    }\r\n}, [suroviny, vybranesuroviny]);\r\n\r\nconst hledejSuroviny = (e) => {\r\n    const value = e.target.value;\r\n    setInputState(value)\r\n    const regExp = new RegExp(value,\"gi\");\r\n    const search = suroviny.filter((item) => {\r\n        return item.materialName.match(regExp);\r\n    })\r\n   setSeznamSurovin(search);\r\n}\r\n\r\nconst vymazZvoleneSurovinyZNabidky = (item) => {\r\n    const cistaData = seznamSurovin.filter((polozka) => {\r\n        return item.name !== polozka.materialName\r\n    })\r\n    setSeznamSurovin(cistaData);\r\n}\r\n\r\nconst zavriDialogPridaniSuroviny = () => {\r\n    setOtevritPridaniSuroviny(false)\r\n}\r\n\r\nreturn (\r\n        <div className=\"vyberSurovin\">\r\n            <div className=\"plocha\">\r\n                <div className=\"zavrit\" onClick={\r\n                    () => {\r\n                      zapnutiVypnutiPaneluSVyberemSuroviny(false)  \r\n                    }\r\n                }></div>\r\n                <div className=\"vyhledavaciPole\"><input value={inputState} onInput={hledejSuroviny} type=\"text\" placeholder={`Vyhledat suroviny (${seznamSurovin.length})`} /></div>\r\n                <div className=\"suroviny\">{seznamSurovin.map((surovina,index) => {\r\n                    return(\r\n                        <div onClick={() => {\r\n                            const object = {\r\n                                name:seznamSurovin[index].materialName,\r\n                                mnozstvi:0\r\n                            }\r\n                            vyberSurovinu(object);\r\n                            vymazZvoleneSurovinyZNabidky(object)\r\n                        \r\n                        }} className=\"surovina\" key={index}>{surovina.materialName}</div>\r\n                    )\r\n                })}\r\n                </div>\r\n                <div className=\"btn\" onClick={()=>setOtevritPridaniSuroviny(!otevritPridaniSuroviny)}> Požadovaná surovina v seznamu chybí?</div>\r\n                {otevritPridaniSuroviny?<PridejSurovinu zavri={zavriDialogPridaniSuroviny}/>:<></>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VyberSuroviny\r\n","/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React, {useState, useContext} from 'react'\r\n//import {  BiReceipt, BiPencil,BiTime, BiAddToQueue, BiSave, BiImage, BiListPlus, BiWinkTongue} from \"react-icons/bi\";\r\n//import { Editor } from \"@tinymce/tinymce-react\";\r\nimport VyberSurovin from \"../component/vyberSuroviny\";\r\nimport { GlobalContext } from '../context/GlobalContext';\r\n\r\nconst AddRecipe = () => {\r\n    /**\r\n     * Globální staty a globální funkce (setry, getry)\r\n     */\r\n    const {\r\n        zapniPanelSVyberemSurovin,\r\n        zapnutiVypnutiPaneluSVyberemSuroviny,\r\n        vybraneSuroviny,\r\n        setVybraneSuroviny\r\n    } = useContext(GlobalContext);\r\n    /**\r\n     * Staty které souvisí s uložením celého formuláře\r\n     */\r\n    const [nazevReceptu, setNazevReceptu] = useState(\"\"); //Nadpis receptu, název receptu\r\n    const [editorState, seteditorState] = useState(\"\"); //Popis receptu, vrací HTML\r\n    const [dobaPripravy, setDobaPripravy] = useState(\"\"); //Doba přípravy state\r\n    const [nahledovyObrazek, setNahledovyObrazek] = useState(\"\"); //URL náhledového obrázku\r\n    const [suroviny, setSuroviny] = useState([]); //Seznam všech surovin, použitých v receptu\r\n    const [soucetGramaze, setSoucetGramaze] = useState(0);\r\n\r\n\r\n    const [msgZeServeru, setMsgZeServeru] = useState(\"\");\r\n    /**\r\n     * @description Získá seznam jednotlivých surovin z databáze\r\n     */\r\n     const getVsechnySuroviny = async () => {\r\n        zapnutiVypnutiPaneluSVyberemSuroviny(true);\r\n     fetch(\"http://localhost:7000/recieve-materials\").then((data) => {\r\n         return data.json();\r\n     }).then(({data}) => {\r\n\r\n         setSuroviny(data);\r\n     })\r\n    }\r\n\r\n  /**\r\n   *\r\n   * @param array Pole objektů\r\n   * @description Přepočítá sumu všech aktivně přidaných surovin\r\n   */\r\n  const prepocitejGramaz = (array) => {\r\n    let sum = 0;\r\n     array.forEach((item) => sum += +item.mnozstvi);\r\n    setSoucetGramaze(sum);\r\n}\r\n\r\n/**\r\n *\r\n * @param e event object\r\n * @description Umístí do globálního contextu nové množství určité suroviny\r\n */\r\n  const menicMnozstvi = (e) => {\r\n      //Aby nešlo jít na menší jak 1\r\n      if(e.target.value && e.target.value > 0){\r\n      const index = e.target.getAttribute(\"index\");\r\n      vybraneSuroviny[index].mnozstvi = parseInt(e.target.value);\r\n      setVybraneSuroviny(vybraneSuroviny);\r\n      prepocitejGramaz(vybraneSuroviny);\r\n    }else{\r\n        //Pokud je hodnota množství suroviny menší nebo rovno nule\r\n        const index = e.target.getAttribute(\"index\");\r\n      vybraneSuroviny[index].mnozstvi = parseInt(0);\r\n      setVybraneSuroviny(vybraneSuroviny);\r\n      prepocitejGramaz(vybraneSuroviny);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param e event objekt\r\n   * @description smaze z globálního contextu (statu) zvolenou surovinu a přepočítá\r\n   * @todo přepočítá to se zpožděním jednoho itemu, nevím proč, kurva!\r\n   */\r\n  const smazZvolenouSurovinu = (e) => {\r\n      const index = e.target.getAttribute(\"index\");\r\n      const ocisteneVybraneSuroviny = vybraneSuroviny.filter((item) =>item.name !== vybraneSuroviny[index].name);\r\n      setVybraneSuroviny(ocisteneVybraneSuroviny);\r\n      prepocitejGramaz(vybraneSuroviny);\r\n  }\r\n\r\n  const ulozitReceptDoDatabaze = () => {\r\n      const schemaObjektu = {\r\n          nazevReceptu:nazevReceptu,\r\n          popis:editorState,\r\n          dobaPripravy:dobaPripravy,\r\n          nahledovyObrazek:nahledovyObrazek,\r\n          suroviny:vybraneSuroviny,\r\n          soucetGramaze:(() => {\r\n              let sum = 0;\r\n              vybraneSuroviny.forEach((item) => {\r\n                  sum += +item.mnozstvi\r\n              });\r\n              return sum;\r\n          })(),\r\n          fullText:(() => {\r\n              let finalstring = `${nazevReceptu} ${editorState} ${dobaPripravy} `;\r\n              vybraneSuroviny.forEach((item) => {\r\n                  finalstring += item.name + \" \";\r\n              })\r\n              return finalstring;\r\n          })()\r\n      }\r\n      if(schemaObjektu.nazevReceptu.length <= 0 ){\r\n          setMsgZeServeru({msg:\"Název receptu není vyplněn - je to povinný údaj\"})\r\n      }else if(schemaObjektu.popis.length<=0){\r\n          setMsgZeServeru({msg:\"Popis receptu nebyl vyplňěn - je to povinný údaj\"})\r\n      }else if(schemaObjektu.dobaPripravy.length <=0){\r\n          setMsgZeServeru({msg:\"Doba přípravy není vyplněna - je to povinný údaj\"})\r\n      }else if(schemaObjektu.nahledovyObrazek.length <=0){\r\n          setMsgZeServeru({msg:\"Náhledový obrázek nebyl přidán, využijte prosím externí URL adresy - je to povinný údaj\"})\r\n      }else if(schemaObjektu.suroviny.length <=0){\r\n          setMsgZeServeru({msg:\"Žádné suroviny nebyly přidány - prosím, přidejte všechny suroviny, která do receptu patří.\"})\r\n      }else{\r\n      fetch(\"http://localhost:7000/save-recipe\",{\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json, text/plain, */*',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(schemaObjektu)\r\n      }).then((msg) => {\r\n          return msg.json();\r\n      }).then((msg) => {\r\n          setMsgZeServeru(msg);\r\n          if(msg.msg === \"Recept byl úspěšně uložen\"){\r\n             window.location.reload();\r\n          }\r\n      }).catch((err) => {\r\n          if(err){\r\n              setMsgZeServeru(\"Nelze se připojit k server, opakujte akci později...\")\r\n          }\r\n      })\r\n    }\r\n  }\r\n\r\n  const dummyVyplneniReceptu = () => {\r\n      setNazevReceptu(\"Jihočeský Guláš\");\r\n      seteditorState(`<p><strong style=\"box-sizing: border-box; color: #333333; font-family: 'Roboto Condensed', sans-serif; font-size: 14px; background-color: #ffffff;\">Postup:</strong></p>\r\n      <p style=\"box-sizing: border-box; margin: 0px 0px 10px; color: #333333; font-family: 'Roboto Condensed', sans-serif; font-size: 14px; background-color: #ffffff;\">1. Na s&aacute;dle orestujeme dozlatova na drobn&eacute; kostičky nakr&aacute;jenou oči&scaron;těnou cibuli<br style=\"box-sizing: border-box;\" />2. Přid&aacute;me mletou červenou papriku, ihned vlož&iacute;me kostky osolen&eacute;ho a pepřem okořeněn&eacute;ho masa, podus&iacute;me ve vlastn&iacute; &scaron;ť&aacute;vě<br style=\"box-sizing: border-box;\" />3. Opečen&eacute; maso podlijeme horkou vodou, okořen&iacute;me km&iacute;nem a rozdrcen&yacute;m česnekem a dus&iacute;me doměkka<br style=\"box-sizing: border-box;\" />4. Do hotov&eacute;ho gul&aacute;&scaron;e vm&iacute;ch&aacute;me je&scaron;tě rajsk&yacute; protlak a přid&aacute;me podu&scaron;enou anglickou slaninu nakr&aacute;jenou na pl&aacute;tky<br style=\"box-sizing: border-box;\" />5. Okořen&iacute;me drcen&yacute;m cel&yacute;m pepřem a cca 5 minut v&scaron;e povař&iacute;me.</p>\r\n      <p><strong style=\"box-sizing: border-box; color: #333333; font-family: 'Roboto Condensed', sans-serif; font-size: 14px; background-color: #ffffff;\">Doporučen&iacute;:</strong></p>\r\n      <p style=\"box-sizing: border-box; margin: 0px 0px 10px; color: #333333; font-family: 'Roboto Condensed', sans-serif; font-size: 14px; background-color: #ffffff;\">Takto připraven&yacute; gul&aacute;&scaron; serv&iacute;rujeme s du&scaron;enou r&yacute;ž&iacute;.</p>`)\r\n     setDobaPripravy(\"140 minut\");\r\n     setNahledovyObrazek(\"https://www.jcted.cz/public/temp/photos/articles/54358/813842_300_285.jpg?lm=1611925219\");\r\n     setVybraneSuroviny([\r\n{mnozstvi: 600, name: \"hovězí maso\"},\r\n {mnozstvi: 200, name: \"cibule\"},\r\n {mnozstvi: 100, name: \"sádlo\"},\r\n {mnozstvi: 10, name: \"rajčatový protlak\"},\r\n {mnozstvi: 10, name: \"česnek\"},\r\n {mnozstvi: 100, name: \"mouka\"},\r\n {mnozstvi: 5, name: \"sladká paprika\"},\r\n {mnozstvi: 300, name: \"čerstvé houby\"},\r\n {mnozstvi: 0, name: \"sůl\"},\r\n {mnozstvi: 0, name: \"pepř\"},\r\n {mnozstvi: 0, name: \"sušená majoránka\"},\r\n {mnozstvi: 0, name: \"kmín\"}\r\n     ])\r\n    }\r\n\r\n  //Test animace\r\n  const pridejTridu = (e) => {\r\n      const parent = e.target.parentElement;\r\n      parent.setAttribute(\"class\",\"polozka to-be-deleted\")\r\n  }\r\n  const odstranTridu = (e) => {\r\n    const parent = e.target.parentElement;\r\n    parent.setAttribute(\"class\",\"polozka\")\r\n  }\r\n\r\n    return (\r\n       <div className=\"layout\">\r\n          {zapniPanelSVyberemSurovin?<VyberSurovin vybranesuroviny={vybraneSuroviny} suroviny={suroviny}/>:<></>}\r\n           <div className=\"column\" style={{\r\n                  height:\"90vh\",\r\n                   overflow: \"scroll\"\r\n           }}>\r\n             <div className=\"recipe-canvas\">\r\n                 <h1>Přidání receptu</h1>\r\n                    <div className=\"add-recipe\">\r\n                        <div className=\"card\">\r\n                            <label htmlFor=\"nazev-receptu\"><h3> Název receptu</h3></label>\r\n                            <input placeholder=\"Použijte výstižné jméno pro receipt\" type=\"text\" onInput={(e) => setNazevReceptu(e.target.value)} value={nazevReceptu}/>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <label htmlFor=\"popis\"><h3> Popis</h3></label>\r\n                            \r\n                             apiKey=\"qcg2yi8kqw531kmg6ydhz6wuxylra4kcs6uw4r3ityltqcu5\"\r\n                        value={editorState}\r\n                        init={{\r\n                        height: 200,\r\n                        menubar: false\r\n                        }}\r\n                        onEditorChange={seteditorState}\r\n                 \r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <label htmlFor=\"popis\"><h3> Doba přípravy</h3></label>\r\n                            <input style={{width:\"50%\"}} placeholder=\"12 minut například\" type=\"text\" onInput={(e) => setDobaPripravy(e.target.value)} value={dobaPripravy}/>\r\n                        </div>\r\n                        <div className=\"card\" style={{\r\n                                backgroundImage:`url(${nahledovyObrazek})`,\r\n                                backgroundSize:\"contain\",\r\n                                backgroundRepeat:\"no-repeat\",\r\n                                backgroundPosition:\"right top\",\r\n\r\n                            }}>\r\n                            <label htmlFor=\"popis\"><h3> Náhledový obrázek</h3></label>\r\n                            <input onInput={(e) => {\r\n                                setNahledovyObrazek(e.target.value);\r\n                            }} placeholder=\"Umístěte externí odkaz\" type=\"text\" name=\"popis\" value={nahledovyObrazek} style={{width:\"50%\"}}/>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <h3> Seznam použitých surovin ({soucetGramaze}g) - pro jednu osobu</h3>\r\n                            <p>Všechny hodnoty zapistuje v gramech na jednu osobu!</p>\r\n                            <br/>\r\n                            <div className=\"vypisSuroviny\">\r\n                          {vybraneSuroviny.map(({name},index) => {\r\n                              return(\r\n                                  <div className=\"polozka\" key={index}><strong>{name}(g):</strong><input key={index} onInput={menicMnozstvi}  index={index}type=\"number\" name={name} value={vybraneSuroviny[index].mnozstvi}/><div className=\"deleteThisItem\" index={index} onClick={smazZvolenouSurovinu} onMouseOver={pridejTridu} onMouseOut={odstranTridu}>smazat</div></div>\r\n                              )\r\n                          })}\r\n                          </div>\r\n                           <div onClick={() => {\r\n                               getVsechnySuroviny()\r\n                           }} className=\"btn btn-add-item\"> Přidat surovinu</div>\r\n                           <br />\r\n                           <div className=\"btn btn-prefil-item\" onClick={dummyVyplneniReceptu}> Předvyplnit receipt</div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"btn btn-save-item\" onClick={ulozitReceptDoDatabaze}> Uložit receipt</div>\r\n                    <p className=\"serverMsg\">{msgZeServeru.msg}</p>\r\n\r\n               </div>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default AddRecipe\r\n","import React,{useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {GlobalContext} from '../context/GlobalContext';\r\n\r\nconst Menu = () => {\r\n    const {surovina} = useContext(GlobalContext);\r\n    return (\r\n        <div className='menu'>\r\n            <Link to=\"/\">Hlavni stranka</Link>\r\n            <Link to=\"/add-material\">Pridani materialu</Link>\r\n            <div>{surovina}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react';\nimport './App.css';\nimport Main from './pages/Main';\nimport AddMaterials from './pages/AddMaterials';\nimport AddRecipe from \"./pages/addRecipe\";\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Menu from './component/Menu';\nimport {GlobalProvider} from './context/GlobalContext'\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <BrowserRouter>\n      <Menu />\n        <Switch>\n          <Route exact path=\"/add-recipe\"  component={AddRecipe}/>\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/add-material\" component={AddMaterials} />\n          \n        </Switch>\n      \n      </BrowserRouter>\n    </GlobalProvider>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}